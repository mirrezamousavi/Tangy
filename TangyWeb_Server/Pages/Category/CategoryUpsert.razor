@page "/category/create"
@page "/category/edit/{id:int}"
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager
<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
                    <div class="text-center"> 
                        <img src="/images/Loading.gif">
                    </div>
        }
        else
        {
                         <EditForm Model="category" OnValidSubmit="UpsertCategory">
                        <DataAnnotationsValidator />
                @*<ValidationSummary />*@
                        <div class="form-group">
                            <label>Name</label>
                            <InputText @bind-Value="category.Name" class="form-control"></InputText>
                            <ValidationMessage For="()=>category.Name"></ValidationMessage>
                        </div>
                        <div class="form-group py-2">
                            <button class="btn btn-primary">@Title</button>
                            <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
                        </div>
                    </EditForm>
        }
    </div>
</div>


@code {

    [Parameter]
    public int Id { get; set; }


    private CategoryDTO category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; } = true;
    protected override async Task OnInitializedAsync()
    {
        if (Id == 0)
        {
            //create
            IsLoading = false;
        }
        else
        {
            //update
            Title = "Update";
            await Task.Run(LoadCategories);
        }

    }

    private void LoadCategories()
    {
        category = _categoryRepository.Get(Id);
        IsLoading = false;
    }
    private void UpsertCategory()
    {
        if (category.Id == 0)
        {
            //create
            _categoryRepository.Create(category);
        }
        else
        {
            //update
            _categoryRepository.Update(category);
        }
        _navigationManager.NavigateTo("category");
    }
}
